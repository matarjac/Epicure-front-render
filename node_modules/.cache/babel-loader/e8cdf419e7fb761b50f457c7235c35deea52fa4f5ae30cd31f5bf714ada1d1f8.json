{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport finalData from \"../../dataFinal.json\";\nexport const restaurantsSlice = createSlice({\n  name: \"restaurants\",\n  initialState: {\n    value: finalData.restaurants\n  },\n  reducers: {\n    filterRestaurants: (state, action) => {\n      const filterType = action.payload;\n      switch (filterType) {\n        case \"all\":\n          state.value = finalData.restaurants;\n          break;\n        case \"new\":\n          state.value = state.value.filter(restaurant => restaurant.isNew === true);\n          break;\n        case \"most popular\":\n          state.value = state.value.filter(restaurant => restaurant.isPopular === true);\n          break;\n        default:\n          state.value = state.value;\n      }\n    }\n  }\n});\nexport const {\n  filterRestaurants\n} = restaurantsSlice.actions;\nexport default restaurantsSlice.reducer;","map":{"version":3,"names":["createSlice","finalData","restaurantsSlice","name","initialState","value","restaurants","reducers","filterRestaurants","state","action","filterType","payload","filter","restaurant","isNew","isPopular","actions","reducer"],"sources":["/Users/matar.jacob/Desktop/FullStack Moveo Course/epicure/epicure/src/store/slices/restaurantsSlice.tsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport finalData from \"../../dataFinal.json\"\n\nexport const restaurantsSlice = createSlice({\n    name: \"restaurants\",\n    initialState: {\n        value: finalData.restaurants\n\n    },\n    reducers:{\n        filterRestaurants: (state, action) =>{\n            const filterType = action.payload;\n            switch (filterType){\n                case \"all\":\n                    state.value = finalData.restaurants;\n                    break;\n                case \"new\":\n                    state.value = state.value.filter(\n                        (restaurant) => restaurant.isNew === true\n                    );\n                    break;\n                case \"most popular\":\n                    state.value = state.value.filter(\n                        (restaurant) => restaurant.isPopular === true\n                    );\n                    break;\n                default:\n                    state.value = state.value;\n            }\n        }\n\n    }\n});\n\nexport const { filterRestaurants } = restaurantsSlice.actions;\nexport default restaurantsSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,SAAS,MAAM,sBAAsB;AAE5C,OAAO,MAAMC,gBAAgB,GAAGF,WAAW,CAAC;EACxCG,IAAI,EAAE,aAAa;EACnBC,YAAY,EAAE;IACVC,KAAK,EAAEJ,SAAS,CAACK;EAErB,CAAC;EACDC,QAAQ,EAAC;IACLC,iBAAiB,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAI;MACjC,MAAMC,UAAU,GAAGD,MAAM,CAACE,OAAO;MACjC,QAAQD,UAAU;QACd,KAAK,KAAK;UACNF,KAAK,CAACJ,KAAK,GAAGJ,SAAS,CAACK,WAAW;UACnC;QACJ,KAAK,KAAK;UACNG,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACJ,KAAK,CAACQ,MAAM,CAC3BC,UAAU,IAAKA,UAAU,CAACC,KAAK,KAAK,IAAI,CAC5C;UACD;QACJ,KAAK,cAAc;UACfN,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACJ,KAAK,CAACQ,MAAM,CAC3BC,UAAU,IAAKA,UAAU,CAACE,SAAS,KAAK,IAAI,CAChD;UACD;QACJ;UACIP,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACJ,KAAK;MAAC;IAEtC;EAEJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEG;AAAkB,CAAC,GAAGN,gBAAgB,CAACe,OAAO;AAC7D,eAAef,gBAAgB,CAACgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}