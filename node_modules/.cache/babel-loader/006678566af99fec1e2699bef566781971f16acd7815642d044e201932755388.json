{"ast":null,"code":"// import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n// import axios from 'axios';\n\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\n// export const fetchChefs = createAsyncThunk(\"chefs/fetchChefs\", async () => {\n//   const response = await axios.get(\"http://localhost:8080/chefs\");\n//   return response.data;\n// });\n\nexport const logIn = createAsyncThunk(\"users/login\", async credentials => {\n  const response = await axios.post(\"http://localhost:8000/users/login\", credentials);\n  return response.data;\n});\n\n// createAsyncThunk<any>(\n//     'user/login',\n//     async (credentials: any) => {\n//         try {\n//             const response = await axios.post('http://localhost:8000/users/login', credentials);\n//             return response.data;\n//         }\n//         catch (err: any) {\n//             return err\n//             thunkAPI.rejectWithValue(err.response.data);\n//         }\n//     });\n\nconst initialState = {\n  data: null\n};\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(logIn.fulfilled, (state, action) => {\n      state.data = action.payload;\n    }).addCase(logIn.pending, (state, action) => {\n      console.log('pending');\n    }).addCase(logIn.rejected, (state, action) => {\n      console.log('rejected');\n    });\n  }\n});\nexport default userSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","logIn","credentials","response","post","data","initialState","userSlice","name","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","pending","console","log","rejected","reducer"],"sources":["/Users/matar.jacob/Desktop/FullStack Moveo Course/epicure/epicure/front/src/store/slices/userSlice.tsx"],"sourcesContent":["// import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n// import axios from 'axios';\n\nimport { AsyncThunkAction, createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\n// export const fetchChefs = createAsyncThunk(\"chefs/fetchChefs\", async () => {\n//   const response = await axios.get(\"http://localhost:8080/chefs\");\n//   return response.data;\n// });\n\n\n\ninterface IUser {\n    name: string,\n    lastName: string,\n    userName: string,\n    password: string,\n    email: string,\n    token?: string\n}\n\nexport interface Credentials {\n    email: string,\n    password: string\n}\n\nexport const logIn = createAsyncThunk(\"users/login\", async (credentials: Credentials): Promise<IUser> => {\n    const response = await axios.post(\"http://localhost:8000/users/login\", credentials);\n    return response.data;\n});\n\n// createAsyncThunk<any>(\n//     'user/login',\n//     async (credentials: any) => {\n//         try {\n//             const response = await axios.post('http://localhost:8000/users/login', credentials);\n//             return response.data;\n//         }\n//         catch (err: any) {\n//             return err\n//             thunkAPI.rejectWithValue(err.response.data);\n//         }\n//     });\n\n\nexport interface UserState {\n    data: {\n        name: string,\n        lastName: string,\n        userName: string,\n        password: string,\n        email: string,\n        token?: string,\n    } | null\n}\n\nconst initialState: UserState = {\n    data: null\n};\n\nexport const userSlice = createSlice({\n    name: 'user',\n    initialState,\n    reducers: {\n    },\n    extraReducers:\n        (builder) => {\n            builder\n                .addCase(logIn.fulfilled, (state, action) => {\n                    state.data = action.payload;\n                })\n                .addCase(logIn.pending, (state, action) => {\n                    console.log('pending')\n                })\n                .addCase(logIn.rejected, (state, action) => {\n                    console.log('rejected')\n                });\n        }\n});\n\nexport default userSlice.reducer;\n\n"],"mappings":"AAAA;AACA;;AAEA,SAA2BA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAClF,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;AACA;;AAkBA,OAAO,MAAMC,KAAK,GAAGH,gBAAgB,CAAC,aAAa,EAAE,MAAOI,WAAwB,IAAqB;EACrG,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,IAAI,CAAC,mCAAmC,EAAEF,WAAW,CAAC;EACnF,OAAOC,QAAQ,CAACE,IAAI;AACxB,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAcA,MAAMC,YAAuB,GAAG;EAC5BD,IAAI,EAAE;AACV,CAAC;AAED,OAAO,MAAME,SAAS,GAAGR,WAAW,CAAC;EACjCS,IAAI,EAAE,MAAM;EACZF,YAAY;EACZG,QAAQ,EAAE,CACV,CAAC;EACDC,aAAa,EACRC,OAAO,IAAK;IACTA,OAAO,CACFC,OAAO,CAACX,KAAK,CAACY,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACzCD,KAAK,CAACT,IAAI,GAAGU,MAAM,CAACC,OAAO;IAC/B,CAAC,CAAC,CACDJ,OAAO,CAACX,KAAK,CAACgB,OAAO,EAAE,CAACH,KAAK,EAAEC,MAAM,KAAK;MACvCG,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IAC1B,CAAC,CAAC,CACDP,OAAO,CAACX,KAAK,CAACmB,QAAQ,EAAE,CAACN,KAAK,EAAEC,MAAM,KAAK;MACxCG,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;IAC3B,CAAC,CAAC;EACV;AACR,CAAC,CAAC;AAEF,eAAeZ,SAAS,CAACc,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}