{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from 'axios';\nexport const logIn = createAsyncThunk('user/login', async (credentials, thunkAPI) => {\n  try {\n    const response = await axios.post('http://localhost:8000/users/login', credentials);\n    return response.data;\n  } catch (err) {\n    return thunkAPI.rejectWithValue(err.response.data);\n  }\n});\nconst initialState = {\n  data: null\n};\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(logIn.fulfilled, (state, action) => {\n      state.data = action.payload;\n    });\n  }\n});\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","logIn","credentials","thunkAPI","response","post","data","err","rejectWithValue","initialState","userSlice","name","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","reducer"],"sources":["/Users/matar.jacob/Desktop/FullStack Moveo Course/epicure/epicure/front/src/store/slices/userSlice.tsx"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from 'axios';\n\ninterface User{\n    name: string,\n    lastName: string,\n    userName: string,\n    password: string,\n    email: string,\n    token?: string\n}\n\nexport interface Credentials{\n    email:string,\n    password: string\n}\n\nexport const logIn = createAsyncThunk<User, Credentials, Async>(\n    'user/login',\n    async (credentials:{email: string, password: string}, thunkAPI) =>{\n        try{\n            const response = await axios.post('http://localhost:8000/users/login',credentials);\n            return response.data;\n        }\n        catch(err:any){\n            return thunkAPI.rejectWithValue(err.response.data);\n        }\n    });\n    \n\ninterface UserState {\n    data:{\n        name: string,\n        lastName: string,\n        userName: string,\n        password: string,\n        email: string,\n        token?: string,\n    } | null\n}\n      \nconst initialState: UserState = {\n    data: null\n};\n\nexport const userSlice = createSlice({\n    name: 'user',\n    initialState,\n    reducers:{\n    },\n    extraReducers:\n    (builder) => {\n        builder.addCase(logIn.fulfilled, (state, action) => {\n          state.data = action.payload;\n        });\n    }\n});\n\nexport default userSlice.reducer;\n\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAgBzB,OAAO,MAAMC,KAAK,GAAGF,gBAAgB,CACjC,YAAY,EACZ,OAAOG,WAA6C,EAAEC,QAAQ,KAAI;EAC9D,IAAG;IACC,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,mCAAmC,EAACH,WAAW,CAAC;IAClF,OAAOE,QAAQ,CAACE,IAAI;EACxB,CAAC,CACD,OAAMC,GAAO,EAAC;IACV,OAAOJ,QAAQ,CAACK,eAAe,CAACD,GAAG,CAACH,QAAQ,CAACE,IAAI,CAAC;EACtD;AACJ,CAAC,CAAC;AAcN,MAAMG,YAAuB,GAAG;EAC5BH,IAAI,EAAE;AACV,CAAC;AAED,OAAO,MAAMI,SAAS,GAAGZ,WAAW,CAAC;EACjCa,IAAI,EAAE,MAAM;EACZF,YAAY;EACZG,QAAQ,EAAC,CACT,CAAC;EACDC,aAAa,EACZC,OAAO,IAAK;IACTA,OAAO,CAACC,OAAO,CAACd,KAAK,CAACe,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAClDD,KAAK,CAACX,IAAI,GAAGY,MAAM,CAACC,OAAO;IAC7B,CAAC,CAAC;EACN;AACJ,CAAC,CAAC;AAEF,eAAeT,SAAS,CAACU,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}