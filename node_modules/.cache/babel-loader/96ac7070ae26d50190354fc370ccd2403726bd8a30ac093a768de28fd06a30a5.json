{"ast":null,"code":"// import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n// import axios from \"axios\";\n// import IUser from \"../../types/interfaces/IUser\";\n\n// interface IUserState{\n//     loading: boolean,\n//     error: null | string,\n//     data: IUser | null\n// }\n\n// const initialState:IUserState = {\n//     loading: false,\n//     error: null,\n//     data: null\n// }\n\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const logInUser = createAsyncThunk(\"users/login\", async (credentials, thunkAPI) => {\n  try {\n    const response = await axios.post(\"http://localhost:8000/users/login\", credentials);\n    return response.data;\n  } catch (err) {\n    return thunkAPI.rejectWithValue(err);\n  }\n});\nconst initialState = {\n  loading: false,\n  error: null,\n  data: null\n};\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    loggedUser: (state, action) => {\n      state.data = action.payload;\n    }\n  }\n  // extraReducers(builder) {\n  //     builder\n  //         .addCase(logInUser.pending, (state, action) => {\n  //             state.loading = true;\n  //         })\n  //         .addCase(logInUser.fulfilled, (state, action: PayloadAction<IUser>) => {\n  //             state.loading = false;\n  //             state.data = action.payload;\n  //         })\n  //         .addCase(logInUser.rejected, (state, action) => {\n  //             state.loading = false;\n  //             state.error = action.error.message;\n  //         })\n  // }\n});\n\nexport const {\n  loggedUse\n} = restaurantsSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","logInUser","credentials","thunkAPI","response","post","data","err","rejectWithValue","initialState","loading","error","userSlice","name","reducers","loggedUser","state","action","payload","loggedUse","restaurantsSlice","actions","reducer"],"sources":["/Users/matar.jacob/Desktop/FullStack Moveo Course/epicure/epicure/front/src/store/slices/userSlice.tsx"],"sourcesContent":["// import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n// import axios from \"axios\";\n// import IUser from \"../../types/interfaces/IUser\";\n\n// interface IUserState{\n//     loading: boolean,\n//     error: null | string,\n//     data: IUser | null\n// }\n\n// const initialState:IUserState = {\n//     loading: false,\n//     error: null,\n//     data: null\n// }\n\n\nimport { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport IUser from \"../../types/interfaces/IUser\";\nimport axios from \"axios\";\n\nexport interface Credentials {\n    email: string,\n    password: string\n}\n\nexport interface UserState {\n    data: IUser | null\n}\ninterface IUserState {\n    loading: boolean,\n    error: null | string | undefined,\n    data: IUser | null\n}\n\nexport const logInUser = createAsyncThunk(\n    \"users/login\",\n    async (credentials: Credentials, thunkAPI) => {\n        try {\n            const response = await axios.post(\"http://localhost:8000/users/login\", credentials);\n            return response.data as IUser;\n        }\n        catch (err: any) {\n            return thunkAPI.rejectWithValue(err)\n        }\n    });\n\n\nconst initialState: IUserState = {\n    loading: false,\n    error: null,\n    data: null\n}\n\nexport const userSlice = createSlice({\n    name: 'user',\n    initialState,\n    reducers: {\n        loggedUser: (state, action) => {\n            state.data = action.payload;\n        }\n    }\n    // extraReducers(builder) {\n    //     builder\n    //         .addCase(logInUser.pending, (state, action) => {\n    //             state.loading = true;\n    //         })\n    //         .addCase(logInUser.fulfilled, (state, action: PayloadAction<IUser>) => {\n    //             state.loading = false;\n    //             state.data = action.payload;\n    //         })\n    //         .addCase(logInUser.rejected, (state, action) => {\n    //             state.loading = false;\n    //             state.error = action.error.message;\n    //         })\n    // }\n});\n\nexport const { loggedUse } = restaurantsSlice.actions;\nexport default userSlice.reducer;"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA,SAASA,gBAAgB,EAAEC,WAAW,QAAuB,kBAAkB;AAE/E,OAAOC,KAAK,MAAM,OAAO;AAgBzB,OAAO,MAAMC,SAAS,GAAGH,gBAAgB,CACrC,aAAa,EACb,OAAOI,WAAwB,EAAEC,QAAQ,KAAK;EAC1C,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,mCAAmC,EAAEH,WAAW,CAAC;IACnF,OAAOE,QAAQ,CAACE,IAAI;EACxB,CAAC,CACD,OAAOC,GAAQ,EAAE;IACb,OAAOJ,QAAQ,CAACK,eAAe,CAACD,GAAG,CAAC;EACxC;AACJ,CAAC,CAAC;AAGN,MAAME,YAAwB,GAAG;EAC7BC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE,IAAI;EACXL,IAAI,EAAE;AACV,CAAC;AAED,OAAO,MAAMM,SAAS,GAAGb,WAAW,CAAC;EACjCc,IAAI,EAAE,MAAM;EACZJ,YAAY;EACZK,QAAQ,EAAE;IACNC,UAAU,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC3BD,KAAK,CAACV,IAAI,GAAGW,MAAM,CAACC,OAAO;IAC/B;EACJ;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ,CAAC,CAAC;;AAEF,OAAO,MAAM;EAAEC;AAAU,CAAC,GAAGC,gBAAgB,CAACC,OAAO;AACrD,eAAeT,SAAS,CAACU,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}