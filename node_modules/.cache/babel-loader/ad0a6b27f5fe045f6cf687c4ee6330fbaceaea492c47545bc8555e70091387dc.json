{"ast":null,"code":"import{createSlice}from\"@reduxjs/toolkit\";import finalData from\"../../dataFinal.json\";export var chefsSlice=createSlice({name:\"chefs\",initialState:{value:finalData.chefs,chefOfTheWeek:finalData.chefOfTheWeek},reducers:{filterChefs:function filterChefs(state,action){var filterType=action.payload;switch(filterType){case\"all\":state.value=finalData.chefs;break;case\"new\":state.value=finalData.chefs;state.value=state.value.filter(function(restaurant){return restaurant.isNew===true;});break;case\"most viewed\":state.value=finalData.chefs;state.value=state.value.filter(function(restaurant){return restaurant.mostViewed===true;});break;case\"chef of the week\":state.value=state.value;state.value=state.value.filter(function(chef){return chef.id==state.chefOfTheWeek;});break;default:state.value=state.value;}}}});var filterChefs=chefsSlice.actions.filterChefs;export{filterChefs};export default chefsSlice.reducer;","map":{"version":3,"names":["createSlice","finalData","chefsSlice","name","initialState","value","chefs","chefOfTheWeek","reducers","filterChefs","state","action","filterType","payload","filter","restaurant","isNew","mostViewed","chef","id","actions","reducer"],"sources":["/Users/matar.jacob/Desktop/FullStack Moveo Course/epicure/epicure/src/store/slices/chefsSlice.tsx"],"sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\nimport finalData from \"../../dataFinal.json\";\n\nexport const chefsSlice = createSlice( {\n    name: \"chefs\",\n    initialState: {\n        value: finalData.chefs,\n        chefOfTheWeek: finalData.chefOfTheWeek\n    },\n    reducers:{\n        filterChefs: (state, action) =>{\n            const filterType = action.payload;\n            switch (filterType){\n                case \"all\":\n                    state.value = finalData.chefs;\n                    break;\n                case \"new\":\n                    state.value = finalData.chefs;\n                    state.value = state.value.filter(\n                        (restaurant) => restaurant.isNew === true\n                    );\n                    break;\n                case \"most viewed\":\n                    state.value = finalData.chefs;\n                    state.value = state.value.filter(\n                        (restaurant) => restaurant.mostViewed === true\n                    );\n                    break;\n                case \"chef of the week\":\n                    state.value = state.value;\n                    state.value = state.value.filter(\n                        (chef) => chef.id == state.chefOfTheWeek\n                    );\n                    break;\n                default:\n                    state.value = state.value;\n            }\n        }\n    }\n})\n\nexport const {filterChefs} = chefsSlice.actions;\nexport default chefsSlice.reducer;\n\n"],"mappings":"AAAA,OAAQA,WAAW,KAAO,kBAAkB,CAC5C,MAAOC,UAAS,KAAM,sBAAsB,CAE5C,MAAO,IAAMC,WAAU,CAAGF,WAAW,CAAE,CACnCG,IAAI,CAAE,OAAO,CACbC,YAAY,CAAE,CACVC,KAAK,CAAEJ,SAAS,CAACK,KAAK,CACtBC,aAAa,CAAEN,SAAS,CAACM,aAC7B,CAAC,CACDC,QAAQ,CAAC,CACLC,WAAW,CAAE,qBAACC,KAAK,CAAEC,MAAM,CAAI,CAC3B,GAAMC,WAAU,CAAGD,MAAM,CAACE,OAAO,CACjC,OAAQD,UAAU,EACd,IAAK,KAAK,CACNF,KAAK,CAACL,KAAK,CAAGJ,SAAS,CAACK,KAAK,CAC7B,MACJ,IAAK,KAAK,CACNI,KAAK,CAACL,KAAK,CAAGJ,SAAS,CAACK,KAAK,CAC7BI,KAAK,CAACL,KAAK,CAAGK,KAAK,CAACL,KAAK,CAACS,MAAM,CAC5B,SAACC,UAAU,QAAKA,WAAU,CAACC,KAAK,GAAK,IAAI,GAC5C,CACD,MACJ,IAAK,aAAa,CACdN,KAAK,CAACL,KAAK,CAAGJ,SAAS,CAACK,KAAK,CAC7BI,KAAK,CAACL,KAAK,CAAGK,KAAK,CAACL,KAAK,CAACS,MAAM,CAC5B,SAACC,UAAU,QAAKA,WAAU,CAACE,UAAU,GAAK,IAAI,GACjD,CACD,MACJ,IAAK,kBAAkB,CACnBP,KAAK,CAACL,KAAK,CAAGK,KAAK,CAACL,KAAK,CACzBK,KAAK,CAACL,KAAK,CAAGK,KAAK,CAACL,KAAK,CAACS,MAAM,CAC5B,SAACI,IAAI,QAAKA,KAAI,CAACC,EAAE,EAAIT,KAAK,CAACH,aAAa,GAC3C,CACD,MACJ,QACIG,KAAK,CAACL,KAAK,CAAGK,KAAK,CAACL,KAAK,CAAC,CAEtC,CACJ,CACJ,CAAC,CAAC,CAEK,GAAOI,YAAW,CAAIP,UAAU,CAACkB,OAAO,CAAjCX,WAAW,CAAuB,oBAChD,cAAeP,WAAU,CAACmB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}