{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\n// import finalData from \"../../dataFinal.json\"\n\n// fetch\n\nconst data = fetch('http://localhost:8000/restaurants', {\n  method: 'GET'\n}).then(response => response.json()).then(data).catch(err => console.log(err));\n\n// const getRestaurants = async () => {\n//     const { data } = await axios.get('http://localhost:8000/restaurants')\n//     return data;\n// }\n\n// const data = getRestaurants()\n// .then((response)=>response.json())\n\n// const finalData = allRestaurants();\n// console.log(finalData);\nconsole.log('out data>>>', getRestaurants());\nexport const restaurantsSlice = createSlice({\n  name: \"restaurants\",\n  initialState: {\n    value: finalData,\n    chefOfTheWeek: 3\n  },\n  reducers: {\n    filterRestaurants: (state, action) => {\n      const filterType = action.payload;\n      switch (filterType) {\n        case \"all\":\n          state.value = finalData;\n          break;\n        case \"new\":\n          state.value = finalData;\n          state.value = state.value.filter(restaurant => restaurant.isNew === true);\n          break;\n        case \"most popular\":\n          state.value = finalData;\n          state.value = state.value.filter(restaurant => restaurant.isPopular === true);\n          break;\n        case \"open now\":\n          let timeNow = new Date();\n          const currentHour = timeNow.getHours();\n          state.value = finalData;\n          state.value = state.value.filter(restaurant => restaurant.openHour <= currentHour && restaurant.closeHour > currentHour);\n          break;\n        case \"chef of the week\":\n          state.value = finalData;\n          state.value = state.value.filter(restaurant => restaurant.chefID == state.chefOfTheWeek);\n          break;\n        default:\n          state.value = state.value;\n      }\n    }\n  }\n});\nexport const {\n  filterRestaurants\n} = restaurantsSlice.actions;\nexport default restaurantsSlice.reducer;","map":{"version":3,"names":["createSlice","data","fetch","method","then","response","json","catch","err","console","log","getRestaurants","restaurantsSlice","name","initialState","value","finalData","chefOfTheWeek","reducers","filterRestaurants","state","action","filterType","payload","filter","restaurant","isNew","isPopular","timeNow","Date","currentHour","getHours","openHour","closeHour","chefID","actions","reducer"],"sources":["/Users/matar.jacob/Desktop/FullStack Moveo Course/epicure/epicure/front/src/store/slices/restaurantsSlice.tsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport axios, { all } from 'axios';\nimport IRestaurantCard from \"../../types/interfaces/IRestaurantCard\";\n// import finalData from \"../../dataFinal.json\"\n\n// fetch\n\nconst data = fetch('http://localhost:8000/restaurants', { method: 'GET' })\n    .then(response => response.json())\n    .then((data))\n    .catch(err => console.log(err))\n\n// const getRestaurants = async () => {\n//     const { data } = await axios.get('http://localhost:8000/restaurants')\n//     return data;\n// }\n\n// const data = getRestaurants()\n// .then((response)=>response.json())\n\n// const finalData = allRestaurants();\n// console.log(finalData);\nconsole.log('out data>>>', getRestaurants());\n\nexport const restaurantsSlice = createSlice({\n    name: \"restaurants\",\n    initialState: {\n        value: finalData,\n        chefOfTheWeek: 3\n    },\n    reducers: {\n        filterRestaurants: (state, action) => {\n            const filterType = action.payload;\n            switch (filterType) {\n                case \"all\":\n                    state.value = finalData;\n                    break;\n                case \"new\":\n                    state.value = finalData;\n                    state.value = state.value.filter(\n                        (restaurant: IRestaurantCard) => restaurant.isNew === true\n                    );\n                    break;\n                case \"most popular\":\n                    state.value = finalData;\n                    state.value = state.value.filter(\n                        (restaurant: IRestaurantCard) => restaurant.isPopular === true\n                    );\n                    break;\n                case \"open now\":\n                    let timeNow: Date = new Date;\n                    const currentHour = timeNow.getHours();\n                    state.value = finalData;\n                    state.value = state.value.filter(\n                        (restaurant: IRestaurantCard) => restaurant.openHour <= currentHour && restaurant.closeHour > currentHour\n                    );\n                    break;\n                case \"chef of the week\":\n                    state.value = finalData;\n                    state.value = state.value.filter(\n                        (restaurant: IRestaurantCard) => restaurant.chefID == state.chefOfTheWeek\n                    );\n                    break;\n                default:\n                    state.value = state.value;\n            }\n        }\n\n    }\n});\n\nexport const { filterRestaurants } = restaurantsSlice.actions;\nexport default restaurantsSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAG9C;;AAEA;;AAEA,MAAMC,IAAI,GAAGC,KAAK,CAAC,mCAAmC,EAAE;EAAEC,MAAM,EAAE;AAAM,CAAC,CAAC,CACrEC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAAEH,IAAI,CAAE,CACZM,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;;AAEnC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACAC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEC,cAAc,EAAE,CAAC;AAE5C,OAAO,MAAMC,gBAAgB,GAAGZ,WAAW,CAAC;EACxCa,IAAI,EAAE,aAAa;EACnBC,YAAY,EAAE;IACVC,KAAK,EAAEC,SAAS;IAChBC,aAAa,EAAE;EACnB,CAAC;EACDC,QAAQ,EAAE;IACNC,iBAAiB,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAClC,MAAMC,UAAU,GAAGD,MAAM,CAACE,OAAO;MACjC,QAAQD,UAAU;QACd,KAAK,KAAK;UACNF,KAAK,CAACL,KAAK,GAAGC,SAAS;UACvB;QACJ,KAAK,KAAK;UACNI,KAAK,CAACL,KAAK,GAAGC,SAAS;UACvBI,KAAK,CAACL,KAAK,GAAGK,KAAK,CAACL,KAAK,CAACS,MAAM,CAC3BC,UAA2B,IAAKA,UAAU,CAACC,KAAK,KAAK,IAAI,CAC7D;UACD;QACJ,KAAK,cAAc;UACfN,KAAK,CAACL,KAAK,GAAGC,SAAS;UACvBI,KAAK,CAACL,KAAK,GAAGK,KAAK,CAACL,KAAK,CAACS,MAAM,CAC3BC,UAA2B,IAAKA,UAAU,CAACE,SAAS,KAAK,IAAI,CACjE;UACD;QACJ,KAAK,UAAU;UACX,IAAIC,OAAa,GAAG,IAAIC,IAAI;UAC5B,MAAMC,WAAW,GAAGF,OAAO,CAACG,QAAQ,EAAE;UACtCX,KAAK,CAACL,KAAK,GAAGC,SAAS;UACvBI,KAAK,CAACL,KAAK,GAAGK,KAAK,CAACL,KAAK,CAACS,MAAM,CAC3BC,UAA2B,IAAKA,UAAU,CAACO,QAAQ,IAAIF,WAAW,IAAIL,UAAU,CAACQ,SAAS,GAAGH,WAAW,CAC5G;UACD;QACJ,KAAK,kBAAkB;UACnBV,KAAK,CAACL,KAAK,GAAGC,SAAS;UACvBI,KAAK,CAACL,KAAK,GAAGK,KAAK,CAACL,KAAK,CAACS,MAAM,CAC3BC,UAA2B,IAAKA,UAAU,CAACS,MAAM,IAAId,KAAK,CAACH,aAAa,CAC5E;UACD;QACJ;UACIG,KAAK,CAACL,KAAK,GAAGK,KAAK,CAACL,KAAK;MAAC;IAEtC;EAEJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEI;AAAkB,CAAC,GAAGP,gBAAgB,CAACuB,OAAO;AAC7D,eAAevB,gBAAgB,CAACwB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}