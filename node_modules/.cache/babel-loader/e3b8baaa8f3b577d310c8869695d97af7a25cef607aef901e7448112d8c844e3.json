{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\n// import finalData from \"../../dataFinal.json\"\n\n// fetch\nconst getAllRestaurants = fetch('http://localhost:8000/restaurants', {\n  method: 'GET'\n}).then(response => response.json()).then(data => {\n  return data;\n}).catch(err => console.log(err));\nconst restaurantsList = await getAllRestaurants;\nexport const restaurantsSlice = createSlice({\n  name: \"restaurants\",\n  initialState: {\n    value: restaurantsList,\n    chefOfTheWeek: 3\n  },\n  reducers: {\n    filterRestaurants: (state, action) => {\n      const filterType = action.payload;\n      switch (filterType) {\n        case \"all\":\n          state.value = finalData;\n          break;\n        case \"new\":\n          state.value = finalData;\n          state.value = state.value.filter(restaurant => restaurant.isNew === true);\n          break;\n        case \"most popular\":\n          state.value = finalData;\n          state.value = state.value.filter(restaurant => restaurant.isPopular === true);\n          break;\n        case \"open now\":\n          let timeNow = new Date();\n          const currentHour = timeNow.getHours();\n          state.value = finalData;\n          state.value = state.value.filter(restaurant => restaurant.openHour <= currentHour && restaurant.closeHour > currentHour);\n          break;\n        case \"chef of the week\":\n          state.value = finalData;\n          state.value = state.value.filter(restaurant => restaurant.chefID == state.chefOfTheWeek);\n          break;\n        default:\n          state.value = state.value;\n      }\n    }\n  }\n});\nexport const {\n  filterRestaurants\n} = restaurantsSlice.actions;\nexport default restaurantsSlice.reducer;","map":{"version":3,"names":["createSlice","getAllRestaurants","fetch","method","then","response","json","data","catch","err","console","log","restaurantsList","restaurantsSlice","name","initialState","value","chefOfTheWeek","reducers","filterRestaurants","state","action","filterType","payload","finalData","filter","restaurant","isNew","isPopular","timeNow","Date","currentHour","getHours","openHour","closeHour","chefID","actions","reducer"],"sources":["/Users/matar.jacob/Desktop/FullStack Moveo Course/epicure/epicure/front/src/store/slices/restaurantsSlice.tsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport axios, { all } from 'axios';\nimport IRestaurantCard from \"../../types/interfaces/IRestaurantCard\";\n// import finalData from \"../../dataFinal.json\"\n\n// fetch\nconst getAllRestaurants = fetch('http://localhost:8000/restaurants', { method: 'GET' })\n    .then(response => response.json())\n    .then((data) => { return data })\n    .catch((err) => console.log(err));\n\nconst restaurantsList = await getAllRestaurants;\n\nexport const restaurantsSlice = createSlice({\n    name: \"restaurants\",\n    initialState: {\n        value: restaurantsList,\n        chefOfTheWeek: 3\n    },\n    reducers: {\n        filterRestaurants: (state, action) => {\n            const filterType = action.payload;\n            switch (filterType) {\n                case \"all\":\n                    state.value = finalData;\n                    break;\n                case \"new\":\n                    state.value = finalData;\n                    state.value = state.value.filter(\n                        (restaurant: IRestaurantCard) => restaurant.isNew === true\n                    );\n                    break;\n                case \"most popular\":\n                    state.value = finalData;\n                    state.value = state.value.filter(\n                        (restaurant: IRestaurantCard) => restaurant.isPopular === true\n                    );\n                    break;\n                case \"open now\":\n                    let timeNow: Date = new Date;\n                    const currentHour = timeNow.getHours();\n                    state.value = finalData;\n                    state.value = state.value.filter(\n                        (restaurant: IRestaurantCard) => restaurant.openHour <= currentHour && restaurant.closeHour > currentHour\n                    );\n                    break;\n                case \"chef of the week\":\n                    state.value = finalData;\n                    state.value = state.value.filter(\n                        (restaurant: IRestaurantCard) => restaurant.chefID == state.chefOfTheWeek\n                    );\n                    break;\n                default:\n                    state.value = state.value;\n            }\n        }\n\n    }\n});\n\nexport const { filterRestaurants } = restaurantsSlice.actions;\nexport default restaurantsSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAG9C;;AAEA;AACA,MAAMC,iBAAiB,GAAGC,KAAK,CAAC,mCAAmC,EAAE;EAAEC,MAAM,EAAE;AAAM,CAAC,CAAC,CAClFC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAAEG,IAAI,IAAK;EAAE,OAAOA,IAAI;AAAC,CAAC,CAAC,CAC/BC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;AAErC,MAAMG,eAAe,GAAG,MAAMX,iBAAiB;AAE/C,OAAO,MAAMY,gBAAgB,GAAGb,WAAW,CAAC;EACxCc,IAAI,EAAE,aAAa;EACnBC,YAAY,EAAE;IACVC,KAAK,EAAEJ,eAAe;IACtBK,aAAa,EAAE;EACnB,CAAC;EACDC,QAAQ,EAAE;IACNC,iBAAiB,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAClC,MAAMC,UAAU,GAAGD,MAAM,CAACE,OAAO;MACjC,QAAQD,UAAU;QACd,KAAK,KAAK;UACNF,KAAK,CAACJ,KAAK,GAAGQ,SAAS;UACvB;QACJ,KAAK,KAAK;UACNJ,KAAK,CAACJ,KAAK,GAAGQ,SAAS;UACvBJ,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACJ,KAAK,CAACS,MAAM,CAC3BC,UAA2B,IAAKA,UAAU,CAACC,KAAK,KAAK,IAAI,CAC7D;UACD;QACJ,KAAK,cAAc;UACfP,KAAK,CAACJ,KAAK,GAAGQ,SAAS;UACvBJ,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACJ,KAAK,CAACS,MAAM,CAC3BC,UAA2B,IAAKA,UAAU,CAACE,SAAS,KAAK,IAAI,CACjE;UACD;QACJ,KAAK,UAAU;UACX,IAAIC,OAAa,GAAG,IAAIC,IAAI;UAC5B,MAAMC,WAAW,GAAGF,OAAO,CAACG,QAAQ,EAAE;UACtCZ,KAAK,CAACJ,KAAK,GAAGQ,SAAS;UACvBJ,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACJ,KAAK,CAACS,MAAM,CAC3BC,UAA2B,IAAKA,UAAU,CAACO,QAAQ,IAAIF,WAAW,IAAIL,UAAU,CAACQ,SAAS,GAAGH,WAAW,CAC5G;UACD;QACJ,KAAK,kBAAkB;UACnBX,KAAK,CAACJ,KAAK,GAAGQ,SAAS;UACvBJ,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACJ,KAAK,CAACS,MAAM,CAC3BC,UAA2B,IAAKA,UAAU,CAACS,MAAM,IAAIf,KAAK,CAACH,aAAa,CAC5E;UACD;QACJ;UACIG,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACJ,KAAK;MAAC;IAEtC;EAEJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEG;AAAkB,CAAC,GAAGN,gBAAgB,CAACuB,OAAO;AAC7D,eAAevB,gBAAgB,CAACwB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}